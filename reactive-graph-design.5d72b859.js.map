{"mappings":"ACAA,IAAI,EAEJ,MAAM,EAAqB,AAAuB,aAAvB,OAAO,YAA8B,IAAI,YAAY,QAAS,CAAE,UAAW,CAAA,EAAM,MAAO,CAAA,CAAK,GAAK,CAAE,OAAQ,KAAQ,MAAM,MAAM,4BAA6B,CAAE,CAE/J,CAAA,aAAvB,OAAO,aAA+B,EAAkB,MAAM,GAgBlE,MAAM,EAAO,AAAI,MAAM,KAAK,IAAI,CAAC,KAAA,GAEjC,EAAK,IAAI,CAAC,KAAA,EAAW,KAAM,CAAA,EAAM,CAAA,GAEjB,EAAK,MAAM,CAkFE,AAFF,CAAA,AAAuB,aAAvB,OAAO,YAA8B,IAAI,YAAY,SAAW,CAAE,OAAQ,KAAQ,MAAM,MAAM,4BAA6B,CAAE,CAAA,EAEzG,UAAU,CA8GtB,AAAgC,aAAhC,OAAO,sBAEpC,IAAI,qBAAqB,AAAA,GAAO,EAAK,wBAAwB,CAAC,IAAQ,IC1N3D,IAAA,IAAoB,0DAAA,QAAA,YAA2D,QAAQ","sources":["<anon>","node_modules/.pnpm/@reactive-graph+design@0.1.3/node_modules/@reactive-graph/design/build/reactive-graph-design.js","node_modules/.pnpm/@parcel+runtime-js@2.12.0_@parcel+core@2.12.0_@swc+helpers@0.5.11__@swc+helpers@0.5.11/node_modules/@parcel/runtime-js/lib/runtime-35647883f5eff956.js"],"sourcesContent":["let $4e829de8752bc8f4$var$wasm;\nconst $4e829de8752bc8f4$var$cachedTextDecoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-8\", {\n    ignoreBOM: true,\n    fatal: true\n}) : {\n    decode: ()=>{\n        throw Error(\"TextDecoder not available\");\n    }\n};\nif (typeof TextDecoder !== \"undefined\") $4e829de8752bc8f4$var$cachedTextDecoder.decode();\nlet $4e829de8752bc8f4$var$cachedUint8Memory0 = null;\nfunction $4e829de8752bc8f4$var$getUint8Memory0() {\n    if ($4e829de8752bc8f4$var$cachedUint8Memory0 === null || $4e829de8752bc8f4$var$cachedUint8Memory0.byteLength === 0) $4e829de8752bc8f4$var$cachedUint8Memory0 = new Uint8Array($4e829de8752bc8f4$var$wasm.memory.buffer);\n    return $4e829de8752bc8f4$var$cachedUint8Memory0;\n}\nfunction $4e829de8752bc8f4$var$getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return $4e829de8752bc8f4$var$cachedTextDecoder.decode($4e829de8752bc8f4$var$getUint8Memory0().subarray(ptr, ptr + len));\n}\nconst $4e829de8752bc8f4$var$heap = new Array(128).fill(undefined);\n$4e829de8752bc8f4$var$heap.push(undefined, null, true, false);\nlet $4e829de8752bc8f4$var$heap_next = $4e829de8752bc8f4$var$heap.length;\nfunction $4e829de8752bc8f4$var$addHeapObject(obj) {\n    if ($4e829de8752bc8f4$var$heap_next === $4e829de8752bc8f4$var$heap.length) $4e829de8752bc8f4$var$heap.push($4e829de8752bc8f4$var$heap.length + 1);\n    const idx = $4e829de8752bc8f4$var$heap_next;\n    $4e829de8752bc8f4$var$heap_next = $4e829de8752bc8f4$var$heap[idx];\n    $4e829de8752bc8f4$var$heap[idx] = obj;\n    return idx;\n}\nfunction $4e829de8752bc8f4$var$getObject(idx) {\n    return $4e829de8752bc8f4$var$heap[idx];\n}\nfunction $4e829de8752bc8f4$var$debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == \"number\" || type == \"boolean\" || val == null) return `${val}`;\n    if (type == \"string\") return `\"${val}\"`;\n    if (type == \"symbol\") {\n        const description = val.description;\n        if (description == null) return \"Symbol\";\n        else return `Symbol(${description})`;\n    }\n    if (type == \"function\") {\n        const name = val.name;\n        if (typeof name == \"string\" && name.length > 0) return `Function(${name})`;\n        else return \"Function\";\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = \"[\";\n        if (length > 0) debug += $4e829de8752bc8f4$var$debugString(val[0]);\n        for(let i = 1; i < length; i++)debug += \", \" + $4e829de8752bc8f4$var$debugString(val[i]);\n        debug += \"]\";\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) className = builtInMatches[1];\n    else // Failed to match the standard '[object ClassName]'\n    return toString.call(val);\n    if (className == \"Object\") // we're a user defined class or Object\n    // JSON.stringify avoids problems with cycles, and is generally much\n    // easier than looping through ownProperties of `val`.\n    try {\n        return \"Object(\" + JSON.stringify(val) + \")\";\n    } catch (_) {\n        return \"Object\";\n    }\n    // errors\n    if (val instanceof Error) return `${val.name}: ${val.message}\\n${val.stack}`;\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\nlet $4e829de8752bc8f4$var$WASM_VECTOR_LEN = 0;\nconst $4e829de8752bc8f4$var$cachedTextEncoder = typeof TextEncoder !== \"undefined\" ? new TextEncoder(\"utf-8\") : {\n    encode: ()=>{\n        throw Error(\"TextEncoder not available\");\n    }\n};\nconst $4e829de8752bc8f4$var$encodeString = typeof $4e829de8752bc8f4$var$cachedTextEncoder.encodeInto === \"function\" ? function(arg, view) {\n    return $4e829de8752bc8f4$var$cachedTextEncoder.encodeInto(arg, view);\n} : function(arg, view) {\n    const buf = $4e829de8752bc8f4$var$cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n};\nfunction $4e829de8752bc8f4$var$passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        const buf = $4e829de8752bc8f4$var$cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        $4e829de8752bc8f4$var$getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        $4e829de8752bc8f4$var$WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n    const mem = $4e829de8752bc8f4$var$getUint8Memory0();\n    let offset = 0;\n    for(; offset < len; offset++){\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) arg = arg.slice(offset);\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = $4e829de8752bc8f4$var$getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = $4e829de8752bc8f4$var$encodeString(arg, view);\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n    $4e829de8752bc8f4$var$WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nlet $4e829de8752bc8f4$var$cachedInt32Memory0 = null;\nfunction $4e829de8752bc8f4$var$getInt32Memory0() {\n    if ($4e829de8752bc8f4$var$cachedInt32Memory0 === null || $4e829de8752bc8f4$var$cachedInt32Memory0.byteLength === 0) $4e829de8752bc8f4$var$cachedInt32Memory0 = new Int32Array($4e829de8752bc8f4$var$wasm.memory.buffer);\n    return $4e829de8752bc8f4$var$cachedInt32Memory0;\n}\nfunction $4e829de8752bc8f4$var$dropObject(idx) {\n    if (idx < 132) return;\n    $4e829de8752bc8f4$var$heap[idx] = $4e829de8752bc8f4$var$heap_next;\n    $4e829de8752bc8f4$var$heap_next = idx;\n}\nfunction $4e829de8752bc8f4$var$takeObject(idx) {\n    const ret = $4e829de8752bc8f4$var$getObject(idx);\n    $4e829de8752bc8f4$var$dropObject(idx);\n    return ret;\n}\nfunction $4e829de8752bc8f4$export$889ea624f2cb2c57() {\n    $4e829de8752bc8f4$var$wasm.run();\n}\nlet $4e829de8752bc8f4$var$cachedUint32Memory0 = null;\nfunction $4e829de8752bc8f4$var$getUint32Memory0() {\n    if ($4e829de8752bc8f4$var$cachedUint32Memory0 === null || $4e829de8752bc8f4$var$cachedUint32Memory0.byteLength === 0) $4e829de8752bc8f4$var$cachedUint32Memory0 = new Uint32Array($4e829de8752bc8f4$var$wasm.memory.buffer);\n    return $4e829de8752bc8f4$var$cachedUint32Memory0;\n}\nfunction $4e829de8752bc8f4$var$getArrayJsValueFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    const mem = $4e829de8752bc8f4$var$getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for(let i = 0; i < slice.length; i++)result.push($4e829de8752bc8f4$var$takeObject(slice[i]));\n    return result;\n}\nfunction $4e829de8752bc8f4$var$handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        $4e829de8752bc8f4$var$wasm.__wbindgen_exn_store($4e829de8752bc8f4$var$addHeapObject(e));\n    }\n}\nfunction $4e829de8752bc8f4$var$isLikeNone(x) {\n    return x === undefined || x === null;\n}\nconst $4e829de8752bc8f4$var$BaseComponentFinalization = typeof FinalizationRegistry === \"undefined\" ? {\n    register: ()=>{},\n    unregister: ()=>{}\n} : new FinalizationRegistry((ptr)=>$4e829de8752bc8f4$var$wasm.__wbg_basecomponent_free(ptr >>> 0));\nclass $4e829de8752bc8f4$export$55ae5207ce896a6b {\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create($4e829de8752bc8f4$export$55ae5207ce896a6b.prototype);\n        obj.__wbg_ptr = ptr;\n        $4e829de8752bc8f4$var$BaseComponentFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        $4e829de8752bc8f4$var$BaseComponentFinalization.unregister(this);\n        return ptr;\n    }\n    free() {\n        const ptr = this.__destroy_into_raw();\n        $4e829de8752bc8f4$var$wasm.__wbg_basecomponent_free(ptr);\n    }\n    /**\n    * @param {HTMLElement} _this\n    */ init(_this) {\n        $4e829de8752bc8f4$var$wasm.basecomponent_init(this.__wbg_ptr, $4e829de8752bc8f4$var$addHeapObject(_this));\n    }\n    /**\n    * @returns {(string)[]}\n    */ observed_attributes() {\n        try {\n            const retptr = $4e829de8752bc8f4$var$wasm.__wbindgen_add_to_stack_pointer(-16);\n            $4e829de8752bc8f4$var$wasm.basecomponent_observed_attributes(retptr, this.__wbg_ptr);\n            var r0 = $4e829de8752bc8f4$var$getInt32Memory0()[retptr / 4 + 0];\n            var r1 = $4e829de8752bc8f4$var$getInt32Memory0()[retptr / 4 + 1];\n            var v1 = $4e829de8752bc8f4$var$getArrayJsValueFromWasm0(r0, r1).slice();\n            $4e829de8752bc8f4$var$wasm.__wbindgen_free(r0, r1 * 4, 4);\n            return v1;\n        } finally{\n            $4e829de8752bc8f4$var$wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} _name\n    * @param {any} _old_value\n    * @param {any} _new_value\n    */ attribute_changed_callback(_name, _old_value, _new_value) {\n        const ptr0 = $4e829de8752bc8f4$var$passStringToWasm0(_name, $4e829de8752bc8f4$var$wasm.__wbindgen_malloc, $4e829de8752bc8f4$var$wasm.__wbindgen_realloc);\n        const len0 = $4e829de8752bc8f4$var$WASM_VECTOR_LEN;\n        $4e829de8752bc8f4$var$wasm.basecomponent_attribute_changed_callback(this.__wbg_ptr, ptr0, len0, $4e829de8752bc8f4$var$addHeapObject(_old_value), $4e829de8752bc8f4$var$addHeapObject(_new_value));\n    }\n    /**\n    */ connected_callback() {\n        $4e829de8752bc8f4$var$wasm.basecomponent_connected_callback(this.__wbg_ptr);\n    }\n    /**\n    */ disconnected_callback() {\n        $4e829de8752bc8f4$var$wasm.basecomponent_disconnected_callback(this.__wbg_ptr);\n    }\n    /**\n    */ adopted_callback() {\n        $4e829de8752bc8f4$var$wasm.basecomponent_adopted_callback(this.__wbg_ptr);\n    }\n    /**\n    * @param {any} _data\n    */ set_data(_data) {\n        $4e829de8752bc8f4$var$wasm.basecomponent_set_data(this.__wbg_ptr, $4e829de8752bc8f4$var$addHeapObject(_data));\n    }\n}\nasync function $4e829de8752bc8f4$var$__wbg_load(module, imports) {\n    if (typeof Response === \"function\" && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === \"function\") try {\n            return await WebAssembly.instantiateStreaming(module, imports);\n        } catch (e) {\n            if (module.headers.get(\"Content-Type\") != \"application/wasm\") console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n            else throw e;\n        }\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n        if (instance instanceof WebAssembly.Instance) return {\n            instance: instance,\n            module: module\n        };\n        else return instance;\n    }\n}\nfunction $4e829de8752bc8f4$var$__wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_createcustomelementjs_1fbe24fe476fc228 = function(arg0, arg1, arg2) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            _create_custom_element_js($4e829de8752bc8f4$var$getStringFromWasm0(arg0, arg1), $4e829de8752bc8f4$export$55ae5207ce896a6b.__wrap(arg2));\n        } finally{\n            $4e829de8752bc8f4$var$wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_innerHTML_5e7bc1b9545c80e2 = function(arg0, arg1) {\n        const ret = $4e829de8752bc8f4$var$getObject(arg1).innerHTML;\n        const ptr1 = $4e829de8752bc8f4$var$passStringToWasm0(ret, $4e829de8752bc8f4$var$wasm.__wbindgen_malloc, $4e829de8752bc8f4$var$wasm.__wbindgen_realloc);\n        const len1 = $4e829de8752bc8f4$var$WASM_VECTOR_LEN;\n        $4e829de8752bc8f4$var$getInt32Memory0()[arg0 / 4 + 1] = len1;\n        $4e829de8752bc8f4$var$getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_attachShadow_0dc29a6e1ed0d233 = function() {\n        return $4e829de8752bc8f4$var$handleError(function(arg0, arg1) {\n            const ret = $4e829de8752bc8f4$var$getObject(arg0).attachShadow($4e829de8752bc8f4$var$getObject(arg1));\n            return $4e829de8752bc8f4$var$addHeapObject(ret);\n        }, arguments);\n    };\n    imports.wbg.__wbg_getAttribute_99bddb29274b29b9 = function(arg0, arg1, arg2, arg3) {\n        const ret = $4e829de8752bc8f4$var$getObject(arg1).getAttribute($4e829de8752bc8f4$var$getStringFromWasm0(arg2, arg3));\n        var ptr1 = $4e829de8752bc8f4$var$isLikeNone(ret) ? 0 : $4e829de8752bc8f4$var$passStringToWasm0(ret, $4e829de8752bc8f4$var$wasm.__wbindgen_malloc, $4e829de8752bc8f4$var$wasm.__wbindgen_realloc);\n        var len1 = $4e829de8752bc8f4$var$WASM_VECTOR_LEN;\n        $4e829de8752bc8f4$var$getInt32Memory0()[arg0 / 4 + 1] = len1;\n        $4e829de8752bc8f4$var$getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = $4e829de8752bc8f4$var$getStringFromWasm0(arg0, arg1);\n        return $4e829de8752bc8f4$var$addHeapObject(ret);\n    };\n    imports.wbg.__wbg_setinnerHTML_700491e56cde09fd = function(arg0, arg1, arg2) {\n        $4e829de8752bc8f4$var$getObject(arg0).innerHTML = $4e829de8752bc8f4$var$getStringFromWasm0(arg1, arg2);\n    };\n    imports.wbg.__wbg_newnoargs_e258087cd0daa0ea = function(arg0, arg1) {\n        const ret = new Function($4e829de8752bc8f4$var$getStringFromWasm0(arg0, arg1));\n        return $4e829de8752bc8f4$var$addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_27c0f87801dedf93 = function() {\n        return $4e829de8752bc8f4$var$handleError(function(arg0, arg1) {\n            const ret = $4e829de8752bc8f4$var$getObject(arg0).call($4e829de8752bc8f4$var$getObject(arg1));\n            return $4e829de8752bc8f4$var$addHeapObject(ret);\n        }, arguments);\n    };\n    imports.wbg.__wbg_new_72fb9a18b5ae2624 = function() {\n        const ret = new Object();\n        return $4e829de8752bc8f4$var$addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_1f9b04f170055d33 = function() {\n        return $4e829de8752bc8f4$var$handleError(function(arg0, arg1, arg2) {\n            const ret = Reflect.set($4e829de8752bc8f4$var$getObject(arg0), $4e829de8752bc8f4$var$getObject(arg1), $4e829de8752bc8f4$var$getObject(arg2));\n            return ret;\n        }, arguments);\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = $4e829de8752bc8f4$var$debugString($4e829de8752bc8f4$var$getObject(arg1));\n        const ptr1 = $4e829de8752bc8f4$var$passStringToWasm0(ret, $4e829de8752bc8f4$var$wasm.__wbindgen_malloc, $4e829de8752bc8f4$var$wasm.__wbindgen_realloc);\n        const len1 = $4e829de8752bc8f4$var$WASM_VECTOR_LEN;\n        $4e829de8752bc8f4$var$getInt32Memory0()[arg0 / 4 + 1] = len1;\n        $4e829de8752bc8f4$var$getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        $4e829de8752bc8f4$var$takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error($4e829de8752bc8f4$var$getStringFromWasm0(arg0, arg1));\n    };\n    return imports;\n}\nfunction $4e829de8752bc8f4$var$__wbg_init_memory(imports, maybe_memory) {}\nfunction $4e829de8752bc8f4$var$__wbg_finalize_init(instance, module) {\n    $4e829de8752bc8f4$var$wasm = instance.exports;\n    $4e829de8752bc8f4$var$__wbg_init.__wbindgen_wasm_module = module;\n    $4e829de8752bc8f4$var$cachedInt32Memory0 = null;\n    $4e829de8752bc8f4$var$cachedUint32Memory0 = null;\n    $4e829de8752bc8f4$var$cachedUint8Memory0 = null;\n    $4e829de8752bc8f4$var$wasm.__wbindgen_start();\n    return $4e829de8752bc8f4$var$wasm;\n}\nfunction $4e829de8752bc8f4$export$2ec80ee76a9348bf(module) {\n    if ($4e829de8752bc8f4$var$wasm !== undefined) return $4e829de8752bc8f4$var$wasm;\n    const imports = $4e829de8752bc8f4$var$__wbg_get_imports();\n    $4e829de8752bc8f4$var$__wbg_init_memory(imports);\n    if (!(module instanceof WebAssembly.Module)) module = new WebAssembly.Module(module);\n    const instance = new WebAssembly.Instance(module, imports);\n    return $4e829de8752bc8f4$var$__wbg_finalize_init(instance, module);\n}\nvar $d89084076221582c$exports = {};\n$d89084076221582c$exports = new URL(\"reactive-graph-design_bg.8a055e9a.wasm\", \"file:\" + __filename).toString();\n\n\nasync function $4e829de8752bc8f4$var$__wbg_init(input) {\n    if ($4e829de8752bc8f4$var$wasm !== undefined) return $4e829de8752bc8f4$var$wasm;\n    if (typeof input === \"undefined\") input = new URL($d89084076221582c$exports);\n    const imports = $4e829de8752bc8f4$var$__wbg_get_imports();\n    if (typeof input === \"string\" || typeof Request === \"function\" && input instanceof Request || typeof URL === \"function\" && input instanceof URL) input = fetch(input);\n    $4e829de8752bc8f4$var$__wbg_init_memory(imports);\n    const { instance: instance, module: module } = await $4e829de8752bc8f4$var$__wbg_load(await input, imports);\n    return $4e829de8752bc8f4$var$__wbg_finalize_init(instance, module);\n}\nvar $4e829de8752bc8f4$export$2e2bcd8739ae039 = $4e829de8752bc8f4$var$__wbg_init;\n\n\n//# sourceMappingURL=reactive-graph-design.5d72b859.js.map\n","let wasm;\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n*/\nexport function run() {\n    wasm.run();\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    const mem = getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nconst BaseComponentFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_basecomponent_free(ptr >>> 0));\n/**\n*/\nexport class BaseComponent {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(BaseComponent.prototype);\n        obj.__wbg_ptr = ptr;\n        BaseComponentFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        BaseComponentFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_basecomponent_free(ptr);\n    }\n    /**\n    * @param {HTMLElement} _this\n    */\n    init(_this) {\n        wasm.basecomponent_init(this.__wbg_ptr, addHeapObject(_this));\n    }\n    /**\n    * @returns {(string)[]}\n    */\n    observed_attributes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.basecomponent_observed_attributes(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4, 4);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} _name\n    * @param {any} _old_value\n    * @param {any} _new_value\n    */\n    attribute_changed_callback(_name, _old_value, _new_value) {\n        const ptr0 = passStringToWasm0(_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.basecomponent_attribute_changed_callback(this.__wbg_ptr, ptr0, len0, addHeapObject(_old_value), addHeapObject(_new_value));\n    }\n    /**\n    */\n    connected_callback() {\n        wasm.basecomponent_connected_callback(this.__wbg_ptr);\n    }\n    /**\n    */\n    disconnected_callback() {\n        wasm.basecomponent_disconnected_callback(this.__wbg_ptr);\n    }\n    /**\n    */\n    adopted_callback() {\n        wasm.basecomponent_adopted_callback(this.__wbg_ptr);\n    }\n    /**\n    * @param {any} _data\n    */\n    set_data(_data) {\n        wasm.basecomponent_set_data(this.__wbg_ptr, addHeapObject(_data));\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_createcustomelementjs_1fbe24fe476fc228 = function(arg0, arg1, arg2) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            _create_custom_element_js(getStringFromWasm0(arg0, arg1), BaseComponent.__wrap(arg2));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_innerHTML_5e7bc1b9545c80e2 = function(arg0, arg1) {\n        const ret = getObject(arg1).innerHTML;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_attachShadow_0dc29a6e1ed0d233 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).attachShadow(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getAttribute_99bddb29274b29b9 = function(arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg1).getAttribute(getStringFromWasm0(arg2, arg3));\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_setinnerHTML_700491e56cde09fd = function(arg0, arg1, arg2) {\n        getObject(arg0).innerHTML = getStringFromWasm0(arg1, arg2);\n    };\n    imports.wbg.__wbg_newnoargs_e258087cd0daa0ea = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_27c0f87801dedf93 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_72fb9a18b5ae2624 = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_1f9b04f170055d33 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('reactive-graph-design_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","module.exports = new __parcel__URL__(\"reactive-graph-design_bg.8a055e9a.wasm\").toString();"],"names":["$4e829de8752bc8f4$var$wasm","$4e829de8752bc8f4$var$cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","Error","$4e829de8752bc8f4$var$heap","Array","fill","undefined","push","length","$4e829de8752bc8f4$var$cachedTextEncoder","TextEncoder","encode","encodeInto","FinalizationRegistry","ptr","__wbg_basecomponent_free","URL","__filename","toString"],"version":3,"file":"reactive-graph-design.5d72b859.js.map","sourceRoot":"../"}